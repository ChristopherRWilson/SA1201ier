name: Build and Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build-and-test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        dotnet-version: ['6.0.x', '8.0.x', '9.0.x']

    steps:
    - uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ matrix.dotnet-version }}

    - name: Restore dependencies
      run: dotnet restore SA1201ier.slnx

    - name: Build
      run: dotnet build SA1201ier.slnx --no-restore --configuration Release

    - name: Test
      run: dotnet test SA1201ier.slnx --no-build --configuration Release --verbosity normal

    - name: Pack NuGet packages
      if: matrix.os == 'ubuntu-latest' && matrix.dotnet-version == '9.0.x'
      run: dotnet pack SA1201ier.slnx --no-build --configuration Release --output ./artifacts

    - name: Upload artifacts
      if: matrix.os == 'ubuntu-latest' && matrix.dotnet-version == '9.0.x'
      uses: actions/upload-artifact@v4
      with:
        name: nuget-packages
        path: ./artifacts/*.nupkg

  test-cli:
    runs-on: ubuntu-latest
    needs: build-and-test
    strategy:
      matrix:
        framework: ['net6.0', 'net8.0', 'net9.0']
        include:
          - framework: 'net6.0'
            dotnet-version: '6.0.x'
          - framework: 'net8.0'
            dotnet-version: '8.0.x'
          - framework: 'net9.0'
            dotnet-version: '9.0.x'

    steps:
    - uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ matrix.dotnet-version }}

    - name: Build CLI
      run: dotnet build SA1201ier.Cli/SA1201ier.csproj --configuration Release

    - name: Create test file
      run: |
        cat > TestFile.cs << 'EOF'
        public class TestClass
        {
            private void PrivateMethod() { }
            public void PublicMethod() { }
        }
        EOF

    - name: Run CLI check
      run: dotnet run --project SA1201ier.Cli/SA1201ier.csproj --framework ${{ matrix.framework }} --no-build --configuration Release -- TestFile.cs --check || true

    - name: Run CLI format
      run: dotnet run --project SA1201ier.Cli/SA1201ier.csproj --framework ${{ matrix.framework }} --no-build --configuration Release -- TestFile.cs

    - name: Verify formatting
      run: |
        if grep -q "public void PublicMethod" TestFile.cs; then
          echo "File was formatted successfully on ${{ matrix.framework }}"
        else
          echo "File formatting failed on ${{ matrix.framework }}"
          exit 1
        fi
